@using Blanche.Shared.Formulas;
@using MudBlazor
@using Blanche.Shared.Products
@using Blanche.Client.Files
@inject IDialogService DialogService

<MudCard>
    <MudCardMedia Image="@url" Height="200" />
    <MudCardActions>
        <MudButton 
                Variant="Variant.Text" 
                Color="Color.Warning" 
                StartIcon="@Icons.Material.Filled.DeleteForever"
                @onclick ="() => DeleteImage(url)">
            Delete
        </MudButton>
    </MudCardActions>
</MudCard>

@code{
    [Parameter] public string url { get; set; } = default!;
    [Parameter] public ProductDto product { get; set; } = default!;
    [Parameter] public FormulaDto.Mutate Formula { get; set; } = default!;
    [Inject] public IStorageService storageService { get; set; } = default!;

    public async Task DeleteImage(string url)
    {
        var dialogOptions = new DialogOptions
            {
                CloseOnEscapeKey = true,
                CloseButton = true,
                DisableBackdropClick = true,
                Position = DialogPosition.Center,
                MaxWidth = MaxWidth.ExtraSmall
            };

        var parameters = new DialogParameters<Dialog>();
        parameters.Add(x => x.ContentText, "Do you really want to delete the image? This process cannot be undone!");
        parameters.Add(x => x.ButtonText, "Delete");
        parameters.Add(x => x.Color, Color.Error);

        var dialog = await DialogService.ShowAsync<Dialog>("Delete Image", parameters, dialogOptions);
        var result = await dialog.Result;

        if (!result.Canceled)
        {
            await storageService.DeleteImageAsync(url);
            product.ImageUrl = string.Empty;
        }
    }
}